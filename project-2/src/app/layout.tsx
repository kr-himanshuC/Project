import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { LuCircleGauge } from "react-icons/lu";
import { IoWalletOutline } from "react-icons/io5";
import { PiCoins } from "react-icons/pi";
import { CgArrowsExchange } from "react-icons/cg";
import { LiaWrenchSolid } from "react-icons/lia";
import { TbCoin } from "react-icons/tb";
import { RxTimer } from "react-icons/rx";
import Link from "next/link";
import { Toaster } from "@/components/ui/sonner";
import SessionProvider from "@/app/api/auth/provider"
import { getServerSession } from "next-auth";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession();
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex justify-center items-center `}
      >
        <SessionProvider session={session}>
        <div className="h-screen w-screen bg-gray-700 flex justify-center items-center ">
          <div className=" w-[97%] h-[96%] bg-gray-500 rounded-4xl">
            {/* navbar */}
            <div className="h-[15%]">
              <nav className="bg-transparent border-gray-200 dark:bg-gray-900">
                <div className="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
                  <a
                    href="https://flowbite.com/"
                    className="flex items-center space-x-3 rtl:space-x-reverse"
                  >
                    <span className="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">
                      Dashboard
                    </span>
                  </a>
                  <div className="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
                    <Link
                      href={'/signin'}
                      type="button"
                      className="text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
                    >
                      Sign in
                    </Link>
                    <Link
                      href={'/signup'}
                      type="button"
                      className="text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-700 dark:border-gray-700"
                    >
                      Sign Up
                    </Link>
                  </div>
                </div>
              </nav>
            </div>

            {/* Body */}
            <div className=" flex h-[85%]">
              {/* sidebar */}
              <div className=" w-[10%] h-[90%]">
                <div className="bg-gray-600 w-[40%] mx-auto bg- h-[100%] flex flex-col justify-evenly items-center rounded-full">
                  <LuCircleGauge className="h-8 w-8 text-white opacity-50"  />
                  <IoWalletOutline className="h-8 w-8 text-white opacity-50"/>
                  <PiCoins className="h-8 w-8 text-white opacity-50"/>
                  <CgArrowsExchange className="h-8 w-8 text-white opacity-50" />
                  <LiaWrenchSolid className="h-8 w-8 text-white opacity-50"/> 
                  <TbCoin className="h-8 w-8 text-white opacity-50"/> 
                  <RxTimer className="h-8 w-8 text-white opacity-50"/> 
                  
                </div>
              </div>

              {/* Main Part */}

              <div className="w-[90%] h-[90%]">
                <Toaster />
                {children}
              </div>
            </div>
          </div>
        </div>
        </SessionProvider>
      </body>
    </html>
  );
}
